h3. Version 3.3.3
* Upgrade codebase to Grails 3.2.
* Add ability to bind exchanges to exchanges.
* Migrate from `Calendar` to `OffsetDateTime` for message timestamps.
* Update amqp-client to version 3.6.6. ([#83|http://github.com/budjb/grails-rabbitmq-native/issues/83])

h3. Version 3.3.2
* Fix message converter/consumer handler issue where message handler methods with primitive types\
  (such as @int@) would not accept the equivalent boxed type (such as @Integer@).

h3. Version 3.3.1
* Reintroduce support for consumer handler methods taking only the @MessageContext@ as a parameter.

h3. Version 3.3.0
{warning}
This version includes changes to the configuration format introduced in 3.2.0. There were issues with YAML configuration
and using the keys as the names of connection, queues, or exchanges where those names had periods in them. There was
no way to escape them, and it broke the configuration parsing code. Due to this, the format had to change. This
decision was not made lightly and I intend on this being the last change to the configuration format.
{warning}
* Changed the configuration format introduced in 3.2.0. This breaks backward compatibility with that version.

h3. Version 3.2.0
{note}A huge thanks to [Ollie Freeman|https://github.com/olliefreeman] for his work on this release.{note}
* First non-beta release of the plugin for Grails 3.
* Deprecate closure-based queue/exchange configuration.
* Add new map-based configuration that works well with YAML.
* Removed @RabbitMessageBuilder@.

{note}
All versions below refer to the Grails 2.x plugin. The Grails 3.x plugin forked from the Grails 2.x version after
release 3.1.3.
{note}

h3. Version 3.1.3
* Add status reports that provides information about all connections and their consumers, including load statistics.
* Upgrade project to Grails 2.5.4.
* Remove gpars dependency.
* Make Grails 2.3 the minimum version of Grails this plugin is intended for.
* Fix consumer configuration from application config parsing issue (#73).
* Refactor message conversion for incoming messages so that conversion to a type only happens if an appropriate handler exists.

h3. Version 3.1.2-beta
* Experimental upgrade to Grails 3.

h3. Version 3.1.2
* Added graceful shutdown support. See @rabbitContext.shutdown()@.
* Added methods to check running state on most managers and contexts.
* Updated rabbitmq Java library to 3.5.4.
* Added the @gpars@ plugin as a dependency.

h3. Version 3.1.1
* Refactored the code to load a consumer's configuration from a static variable so that it works correctly when the\
  consumer is annotated with @\@Transactional@.\
  ([#55|http://github.com/budjb/grails-rabbitmq-native/issues/55])
* Add setter methods for the message TTL (@expiration@).\
  ([#56|http://github.com/budjb/grails-rabbitmq-native/issues/56])
* Fix bug where missing connection configuration values do not allow the use of default values.
* Remove checked exception from ConsumerManageImpl that does not exist in its interface.\
  ([#59|http://github.com/budjb/grails-rabbitmq-native/issues/59])

h3. Version 3.1.0
* Update the RabbitMQ Client Java library to 3.5.0.
* Fix an issue that caused unclean shutdowns when redeploying an application using the plugin.\
  ([#54|http://github.com/budjb/grails-rabbitmq-native/issues/54])
* Added the ability to start and stop individual connections.\
  ([#49|http://github.com/budjb/grails-rabbitmq-native/issues/49])
* Added the ability to start and stop individual consumers.\
  ([#49|http://github.com/budjb/grails-rabbitmq-native/issues/49])
* Added the ability to start and stop consumers based on the connection they're tied to.\
  ([#49|http://github.com/budjb/grails-rabbitmq-native/issues/49])
* Moved consumer adapter storage from the connection context to the consumer manager.
* Handle @Throwable@ types that were not being handled before in the consumer handling so that channels are not closed\
  if one of the unhandled errors occurs.\
  ([#47|http://github.com/budjb/grails-rabbitmq-native/issues/47])
* Added travis-ci continuous integration for all commits to the plugin.

h3. Version 3.0.4
* Fix a null pointer exception when a consumer has no configuration.
* Add a unit test to test behavior when a consumer has no configuration.
* Add an integration test to test behavior when sending a message directly to a queue.

h3. Version 3.0.3
* Introduced the @rabbitMessagePublisher@ bean to replace the @RabbitMessageBuilder@.
* Deprecated the @RabbitMessageBuilder@.
* Massive refactor of the internals of the plugin.  See the upgrading page for more detailed information about what has\
  changed.
* Added the ability to configure consumers centrally in the application's configuration file (thanks Erwan Arzur).
* Updated RabbitMQ library version to 3.4.3.

h3. Version 3.0.2
* Internal release, see 3.0.3.

h3. Version 3.0.1
* Internal release, see 3.0.3.

h3. Version 3.0.0
* Internal Release, see 3.0.3.

h3. Version 2.0.10
* Fix bug with converters that prevented converters later in the processing list from executing if another convert is\
  unable to marshall data from bytes.
* Add @enabled@ flag to the configuration. If false, completely disables the plugin from starting.

h3. Version 2.0.9
* Additional fix for memory leak associated with RPC calls and auto-recovering connections.

h3. Version 2.0.8
* Fix bug introduced by rushing the previous fix. Mark consuming = true.

h3. Version 2.0.7
* Add @basicCancel()@ to @RabbitMessageBuilder@ in an attempt to address a memory leak.
* Improve cleaning up of resources in RPC calls.

h3. Version 2.0.6
* Updated copyright notices.
* Added GString message converter.
* Updated publishing guide docs to make RabbitMessageBuilder usage more clear (thanks marcDeSantis @GitHub).

h3. Version 2.0.5
* Added heartbeat configuration for connections (thanks LuisMuniz @GitHub).
* Refactored Hibernate session support so that Hibernate is no longer a dependency of the plugin, and will now work\
  with or without Hibernate present.

h3. Version 2.0.4
* Added multi-server support to all aspects of the plugin.
* Added SSL support for connections.
* Added auto-reconnect support for dropped connections.
* Added logic to wrap a Hibernate session around calls to consumers.
* Updated the RabbitMQ library to version 3.3.0.
* Added logging for connection/channel reconnects and channel shutdowns.
* Changed format for connection configurations. The old style is still supported, but will likely be removed at some\
  point.

h3. Version 1.0.3
* Modified the logic to check for the existence of callbacks in consumers.

h3. Version 1.0.2
* Added a cached thread pool so the user does not need to account for the number of threads consumers require. Set the\
  default to 0 so that this is the default.
* Added callbacks for messages: onReceive, onSuccess, onFailure, and onComplete.

h3. Version 1.0.1
* Remove the maven group from the plugin definition class.

h3. Version 1.0.0
* Version bump for general release.

h3. Version 0.2.1
* Fixed a bug with the message handler discovery method that caused generically-typed handlers to get called\
  incorrectly.

h3. Version 0.2.0
* Refactored queue/exchange configuration. It is now possible configure queue binding without having to also configure\
  the exchange being bound to.
* Added the @match@ property to queue configuration to support headers exchange binding.\
  *This breaks backwards compatibility.*
* Renaming the @routingKey@ property of the consumer configuration to @binding@ to match queue configuration.\
  *This breaks backwards compatibility.*

h3. Version 0.1.8
* Moved the trigger to start consumers on application launch to the bootstrap.

h3. Version 0.1.7
* Added the @prefetchCount@ option to the consumer configuration. Defaults to 1.
* Added the @threads@ option to the connection configuration. Defaults to 5.

h3. Version 0.1.6
* Fixed logic to determine if a consumer is valid.
* Added support for short-form handlers that only take a single parameter.

h3. Version 0.1.5
* @body@ parameter to the @RabbitMessageBuilder@ is no longer required. It now defaults to an empty byte array.

h3. Version 0.1.4
* Fix a class visibility issue in the artefact handlers for this plugin.

h3. Version 0.1.3
* Touch up the consumer template.

h3. Version 0.1.2
* Add the ability to create multiple consumers at the same time with the @create-consumer@ script (thanks Aaron Brown!).
* Also create a unit test when creating consumers (thanks Michael Rice!).

h3. Version 0.1.1
* Throw an exception if the connection configuration is missing on application start (thanks Michael Rice!).
* Add the @create-consumer@ script (thanks Aaron Brown!).

h3. Version 0.1
* Code complete/experimental release.
